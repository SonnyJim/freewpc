#include <freewpc.h>
#include <xbmprog.h>

/* vi: set filetype=c: Automatically generated by fiftool */

const U8 fif_soccerball[] = {
   0x02, /* format */
   XBMPROG_METHOD_RLE, XBMPROG_RLE_SKIP, 6, 0x80, 0x60, XBMPROG_RLE_SKIP, 14, 0xF8, 0xFF, XBMPROG_RLE_SKIP, 14, 0xFE, 0xFF, 0x07, XBMPROG_RLE_SKIP, 13, 0xFE, 0xFF, 0x03, XBMPROG_RLE_SKIP, 13, 0xFF, 0xFF, XBMPROG_RLE_SKIP, 13, 0x80, 0xEF, 0xFF, 0x21, XBMPROG_RLE_SKIP, 12, 0xC0, 0xC3, 0xFF, 0x40, XBMPROG_RLE_SKIP, 12, 0xF0, 0x01, 0xFE, 0xC1, XBMPROG_RLE_SKIP, 12, 0xF0, 0x00, 0xFC, 0x03, XBMPROG_RLE_SKIP, 12, 0x78, 0x00, 0xFE, 0x07, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, 0x00, 0xFE, 0x0F, XBMPROG_RLE_SKIP, 12, 0xF0, 0x00, 0xFF, 0xAF, 0x01, XBMPROG_RLE_SKIP, 11, 0xFC, 0x00, 0xFE, 0xFF, 0x03, XBMPROG_RLE_SKIP, 11, 0x78, 0x00, 0xFF, 0xFF, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, 0x01, 0xFF, 0xFF, 0x01, XBMPROG_RLE_SKIP, 11, 0xFC, 0x9D, 0xFF, 0xFF, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x01, XBMPROG_RLE_SKIP, 11, 0xFC, 0xFF, 0x7F, 0xFB, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, 0xFF, 0x0F, 0xE0, 0x01, XBMPROG_RLE_SKIP, 11, 0xF0, 0xFF, 0x1F, 0xF0, XBMPROG_RLE_SKIP, 12, 0xE8, 0xFF, 0x0F, 0xF0, 0x01, XBMPROG_RLE_SKIP, 11, 0x10, 0xFE, 0x07, 0x60, XBMPROG_RLE_SKIP, 12, 0x10, 0xFE, 0x0F, 0xE0, XBMPROG_RLE_SKIP, 12, 0x20, 0xFC, 0x07, 0x38, XBMPROG_RLE_SKIP, 13, 0xF0, 0x0F, 0x1C, XBMPROG_RLE_SKIP, 13, 0xE0, 0x2F, 0x0C, XBMPROG_RLE_SKIP, 13, 0xF1, 0x7F, 0x07, XBMPROG_RLE_SKIP, 13, 0xF2, 0xFF, 0x07, XBMPROG_RLE_SKIP, 13, 0xE8, 0x7F, 0x01, XBMPROG_RLE_SKIP, 13, 0x40, 0x20, XBMPROG_RLE_SKIP, 8, 
   XBMPROG_METHOD_RLE, XBMPROG_RLE_SKIP, 7, 0x1F, XBMPROG_RLE_SKIP, 14, 0xC0, 0xFF, 0x01, XBMPROG_RLE_SKIP, 13, 0xFC, 0xFF, 0x03, XBMPROG_RLE_SKIP, 13, 0xFF, 0xFF, 0x0D, XBMPROG_RLE_SKIP, 12, 0x80, 0xFF, 0xFF, 0x11, XBMPROG_RLE_SKIP, 12, 0xC0, 0xFF, 0xFF, XBMPROG_RLE_SKIP, 13, 0xE0, 0x87, 0xFF, XBMPROG_RLE_SKIP, 13, 0xE0, 0x03, 0xFF, XBMPROG_RLE_SKIP, 13, 0xF0, 0x01, 0xFE, 0x81, XBMPROG_RLE_SKIP, 12, 0xF0, 0x00, 0xFE, 0x83, XBMPROG_RLE_SKIP, 12, 0x70, 0x00, 0xFE, 0x87, 0x01, XBMPROG_RLE_SKIP, 11, 0x78, 0x00, 0xFE, 0xCF, 0x01, XBMPROG_RLE_SKIP, 11, 0x78, 0x00, 0xFF, 0xFF, 0x01, XBMPROG_RLE_SKIP, 11, 0xFC, 0x00, 0xFF, 0xFF, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, 0x00, 0xFF, 0xFF, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, 0xE1, 0xFF, 0xFF, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x03, XBMPROG_RLE_SKIP, 11, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 3, 0x03, XBMPROG_RLE_SKIP, 11, 0xF8, 0xFF, 0xFF, 0xF0, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, 0xFF, 0x1F, 0xF0, 0x01, XBMPROG_RLE_SKIP, 11, 0xF8, 0xFF, 0x0F, 0xE0, 0x01, XBMPROG_RLE_SKIP, 11, 0x10, 0xFF, 0x0F, 0xE0, XBMPROG_RLE_SKIP, 13, 0xFF, 0x0F, 0xE0, XBMPROG_RLE_SKIP, 13, 0xFE, 0x07, 0x70, XBMPROG_RLE_SKIP, 13, 0xFC, 0x07, 0x70, XBMPROG_RLE_SKIP, 13, 0xF8, 0x07, 0x38, XBMPROG_RLE_SKIP, 13, 0xF0, 0x1F, 0x1E, XBMPROG_RLE_SKIP, 13, 0xF0, 0xFF, 0x0F, XBMPROG_RLE_SKIP, 13, 0xFC, 0xFF, 0x03, XBMPROG_RLE_SKIP, 13, 0xF0, 0xFF, XBMPROG_RLE_SKIP, 14, 0x80, 0x1F, XBMPROG_RLE_SKIP, 8, 
};
