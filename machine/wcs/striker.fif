#include <freewpc.h>
#include <xbmprog.h>

/* vi: set filetype=c: Automatically generated by fiftool */

const U8 fif_striker[] = {
   0x02, /* format */
   XBMPROG_METHOD_RLE, 0x3F, 0x00, 0xF0, 0xE4, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x3F, 0x00, 0xF0, 0xCB, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x3F, 0x00, 0x7E, 0xF9, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x3F, 0x80, 0x3F, 0xCA, 0x3F, 0xF8, XBMPROG_RLE_REPEAT, 0xFF, 10, 0x3F, 0xE0, 0x3F, 0x8A, 0x0F, 0xF0, XBMPROG_RLE_REPEAT, 0xFF, 10, 0x3F, 0xFC, 0xDF, 0xB3, 0x03, 0xC0, XBMPROG_RLE_REPEAT, 0xFF, 10, 0x7F, 0xFF, 0x7F, 0xF0, 0x7F, 0xC0, XBMPROG_RLE_REPEAT, 0xFF, 12, 0xCF, 0xF3, 0xFF, 0xE0, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x47, 0xD5, 0xFF, 0xF1, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x47, 0xF5, 0xFE, XBMPROG_RLE_REPEAT, 0xFF, 13, 0xC3, 0xAF, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x81, 0xC1, 0xF8, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x81, 0x07, 0xF0, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x01, 0x00, 0xE0, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x00, 0x00, 0xC0, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x00, 0x00, 0x80, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x00, 0x00, 0x7C, 0xFE, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x01, 0x00, 0x01, 0xFE, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x71, 0x40, 0x00, 0xFD, XBMPROG_RLE_REPEAT, 0xFF, 12, 0xC3, 0x20, 0x00, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x47, 0x10, 0x00, 0xFC, XBMPROG_RLE_REPEAT, 0xFF, 12, 0x4F, 0x10, 0x00, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x9F, 0x10, 0x00, XBMPROG_RLE_REPEAT, 0xFF, 13, 0xBF, 0x21, 0x80, XBMPROG_RLE_REPEAT, 0xFF, 13, 0x7F, 0x41, 0x80, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x82, 0xC0, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x0D, 0xDE, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x39, 0xE0, XBMPROG_RLE_REPEAT, 0xFF, 14, 0xE3, 0xF0, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x87, 0xF7, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x07, 0xFD, XBMPROG_RLE_REPEAT, 0xFF, 14, 0x0F, XBMPROG_RLE_REPEAT, 0xFF, 12, 
   XBMPROG_METHOD_RLE, XBMPROG_RLE_SKIP, 19, 0x04, XBMPROG_RLE_SKIP, 15, 0x06, XBMPROG_RLE_SKIP, 15, 0x04, XBMPROG_RLE_SKIP, 15, 0x04, XBMPROG_RLE_SKIP, 15, 0x0C, XBMPROG_RLE_SKIP, 15, 0x0E, XBMPROG_RLE_SKIP, 14, 0x30, 0x0C, XBMPROG_RLE_SKIP, 14, 0xB8, 0x2B, XBMPROG_RLE_SKIP, 14, 0xB8, 0x0B, 0x01, XBMPROG_RLE_SKIP, 13, 0x3C, 0x10, 0x03, XBMPROG_RLE_SKIP, 13, 0x7E, 0x38, 0x07, XBMPROG_RLE_SKIP, 13, 0x7E, 0xF8, 0x0F, XBMPROG_RLE_SKIP, 13, 0xFE, 0xFF, 0x1F, XBMPROG_RLE_SKIP, 13, 0xFF, 0xFF, 0x3F, XBMPROG_RLE_SKIP, 13, 0xFF, 0xFF, 0x7F, XBMPROG_RLE_SKIP, 13, 0xFF, 0xFF, 0x83, 0x01, XBMPROG_RLE_SKIP, 12, 0xFE, 0xFF, 0x00, 0x01, XBMPROG_RLE_SKIP, 12, 0x8E, 0x3F, 0x00, 0x02, XBMPROG_RLE_SKIP, 12, 0x3C, 0x1F, 0x00, 0x02, XBMPROG_RLE_SKIP, 12, 0xB8, 0x0F, 0x00, 0x02, XBMPROG_RLE_SKIP, 12, 0xB0, 0x0F, XBMPROG_RLE_SKIP, 14, 0x60, 0x0F, XBMPROG_RLE_SKIP, 14, 0x40, 0x1E, XBMPROG_RLE_SKIP, 14, 0x80, 0x3E, XBMPROG_RLE_SKIP, 15, 0x7D, XBMPROG_RLE_SKIP, 15, 0xF2, 0x21, XBMPROG_RLE_SKIP, 14, 0xC6, 0x1F, XBMPROG_RLE_SKIP, 14, 0x1C, 0x0F, XBMPROG_RLE_SKIP, 14, 0x78, XBMPROG_RLE_SKIP, 15, 0xF8, XBMPROG_RLE_SKIP, 15, 0xF0, XBMPROG_RLE_SKIP, 12, 
};
