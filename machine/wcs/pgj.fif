#include <freewpc.h>
#include <xbmprog.h>

/* vi: set filetype=c: Automatically generated by fiftool */

const U8 fif_pgj[] = {
   0x02, /* format */
   XBMPROG_METHOD_RLE, 0x00, 0x00, XBMPROG_RLE_REPEAT, 0xFF, 11, 0x3F, XBMPROG_RLE_SKIP, 4, 0x81, 0x7F, 0x08, 0x3E, 0xF8, 0xFF, 0xF1, 0x07, 0x1F, 0x7C, 0x00, 0x20, XBMPROG_RLE_SKIP, 4, 0x41, 0xFE, 0x00, 0x3E, 0xF8, 0xFF, 0xC0, 0x07, 0x1E, 0x7D, 0x04, 0x38, XBMPROG_RLE_SKIP, 4, 0x01, 0x78, 0x00, 0x3D, 0xF8, 0xBF, 0xD0, 0x87, 0x1E, 0x3E, 0x00, 0x38, XBMPROG_RLE_SKIP, 4, 0x01, 0x74, 0x00, 0x3F, 0xF8, 0x5F, 0xD0, 0x83, 0x1E, 0x3C, 0x00, 0x21, XBMPROG_RLE_SKIP, 4, 0x01, 0x68, 0x00, 0x3C, 0xF8, 0x1F, 0xC0, 0x83, 0x1E, 0x3C, 0x00, 0x3D, XBMPROG_RLE_SKIP, 4, 0x41, 0x70, 0x00, 0x3A, 0xFA, 0x0E, 0xC0, 0x03, 0x1E, 0x1C, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0x41, 0x50, 0x00, 0x3C, 0x06, 0x04, 0xE2, 0x03, 0x1C, 0x08, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x21, 0x00, 0x10, 0xE4, 0x00, 0xE0, 0x03, 0x1C, 0x09, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x23, 0x00, 0xD4, 0x1C, 0x18, 0xF8, 0x01, 0x1D, 0x10, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x43, 0x00, 0x18, 0x7F, 0x30, 0xFC, 0x01, 0x1C, 0x02, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x03, 0x00, 0x08, 0xBA, 0x01, 0xFF, 0x01, 0x1C, 0x40, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x03, 0x80, 0x98, 0xB1, 0x43, 0xFF, 0x11, 0x18, 0x00, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x03, 0x80, 0x51, 0xF6, 0x47, 0xFF, 0x31, 0x18, 0x00, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x03, 0x80, 0x50, 0xEF, 0x27, 0xFF, 0x10, 0x1A, 0x60, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x01, 0x80, 0x30, 0xDE, 0x31, 0xFF, 0x00, 0x18, 0x00, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x00, 0x80, 0x00, 0x33, 0x3F, 0xFF, 0x20, 0x18, 0x7C, 0x00, 0x30, XBMPROG_RLE_SKIP, 4, 0x41, 0x70, 0x80, 0x20, 0x31, 0x21, 0xC0, 0x38, 0x18, 0x7C, 0x00, 0x31, XBMPROG_RLE_SKIP, 4, 0x01, 0x60, 0x80, 0x42, 0xFC, 0x80, 0xC0, 0x78, 0x18, 0x7C, 0x00, 0x30, XBMPROG_RLE_SKIP, 4, 0x01, 0x60, 0x80, 0x82, 0x78, 0x50, 0x40, 0x68, 0x10, 0x7C, 0x00, 0x30, XBMPROG_RLE_SKIP, 4, 0x01, 0x72, 0x80, 0x82, 0x00, 0x00, 0x40, 0x60, 0x14, 0x7C, 0x00, 0x37, XBMPROG_RLE_SKIP, 4, 0x01, 0x7B, 0x80, 0x06, 0x01, 0x00, 0x40, 0x70, 0x10, 0x7C, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xE1, 0x7E, 0x80, 0x06, 0x02, 0x50, 0x40, 0xFC, 0x10, 0x7C, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0x81, 0x7F, 0x80, 0x06, 0x0C, 0x80, 0x41, 0x04, 0x10, 0x7C, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x7F, 0x80, 0x0E, 0x00, 0x0A, 0x41, 0x00, 0x10, 0x7C, 0x00, 0x3F, XBMPROG_RLE_SKIP, 4, 0xC1, 0x7F, 0x80, 0x0E, 0xF8, 0x0F, 0x42, 0x00, 0x10, 0x7C, 0x00, 0x3D, XBMPROG_RLE_SKIP, 4, 0xC1, 0x7F, 0x80, 0x1E, 0xF8, 0x3F, 0x50, 0xFC, 0x11, 0x7C, 0x00, 0x38, XBMPROG_RLE_SKIP, 4, 0xC1, 0xFF, 0x80, 0x1E, 0xF8, 0x7F, 0x50, 0xFE, 0x93, 0x7C, 0x00, 0x38, XBMPROG_RLE_SKIP, 4, 0xC1, 0xFF, 0x80, 0x1E, 0xF8, 0xFF, 0x41, 0xFE, 0x93, 0x7C, 0x00, 0x38, XBMPROG_RLE_SKIP, 4, 0xC1, 0x7F, 0x00, 0x3E, 0xFC, 0xFF, 0x41, 0xF8, 0x11, 0x7C, 0x00, 0x30, XBMPROG_RLE_SKIP, 4, 0x81, 0x7F, 0x00, 0x00, 0xFC, 0xFF, 0x7F, XBMPROG_RLE_SKIP, 4, 0x30, XBMPROG_RLE_SKIP, 4, XBMPROG_RLE_REPEAT, 0xFF, 11, 0x3F, 0x00, 0x00, 
   XBMPROG_METHOD_RLE, 0x00, 0x00, XBMPROG_RLE_REPEAT, 0xFF, 11, 0x3F, XBMPROG_RLE_SKIP, 4, 0x81, 0x7F, 0x08, 0x3F, 0xFC, 0xFF, 0xF3, 0x07, 0x1F, 0x7E, 0x10, 0x20, XBMPROG_RLE_SKIP, 4, 0x3D, 0x7E, 0xFB, 0xFE, 0xFD, 0xFF, 0xCF, 0x77, 0xDF, 0x7C, 0xD3, 0x27, XBMPROG_RLE_SKIP, 4, 0xFD, 0xFD, 0xFB, 0xFE, 0xFD, 0x7F, 0xDF, 0x77, 0xDE, 0x7D, 0xD7, 0x27, XBMPROG_RLE_SKIP, 4, 0xFD, 0xFB, 0xFB, 0xFC, 0xFD, 0xBF, 0xDF, 0x73, 0xDE, 0xB9, 0xD7, 0x20, XBMPROG_RLE_SKIP, 4, 0xDD, 0xF7, 0xFB, 0xFD, 0xFD, 0xFF, 0xDF, 0x7B, 0xDE, 0xBB, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xEF, 0xFB, 0xFD, XBMPROG_RLE_REPEAT, 0xED, 1, 0xFF, 0xDF, 0xFB, 0xDE, 0xB3, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xCF, 0xFB, 0xFB, 0x03, 0xFE, 0xEF, 0xFB, 0xDE, 0xD7, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xDF, 0xFB, 0xFB, 0x1F, 0xF9, 0xF3, 0xFB, 0xDC, 0xE6, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xDF, 0xFB, 0x3B, 0xFF, 0xE7, 0xFD, 0xDD, 0xDC, XBMPROG_RLE_REPEAT, 0xEE, 1, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0xFB, 0xF7, 0xBE, 0x8F, 0xFE, 0xDD, 0xDD, 0x7C, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0xFB, 0xF7, 0x7D, 0x5E, 0xFF, 0xDD, 0xDD, 0x3E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0x7B, 0x67, 0xDF, 0x9F, 0xFF, 0xCD, 0xDD, 0x3E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0x7B, 0xAE, 0xC9, 0x9F, 0xFF, 0xCD, 0xD9, 0x3A, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0x7B, 0xAF, 0xDC, 0x1F, 0xFF, 0xEC, 0xD9, 0x16, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xBF, 0x7B, 0x8F, 0xFF, 0x4F, 0xFF, XBMPROG_RLE_REPEAT, 0xEE, 1, 0xDB, 0x4E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0x9F, 0x7B, 0x9F, 0xCC, 0x40, 0xFF, XBMPROG_RLE_REPEAT, 0xEE, 1, 0xDB, 0x7E, 0xD7, 0x30, XBMPROG_RLE_SKIP, 4, 0xDD, 0xCF, 0x7B, 0x9F, 0xFE, 0x5F, 0xC0, 0xE6, 0xDB, 0x7E, 0xD7, 0x36, XBMPROG_RLE_SKIP, 4, 0xDD, 0xEF, 0x7B, 0xBF, 0xFF, 0x7F, 0xDF, 0xE6, 0xDB, 0x7E, 0xD7, 0x37, XBMPROG_RLE_SKIP, 4, 0xFD, 0xF7, 0x7B, 0x7F, 0xFF, 0xAF, 0x5F, 0xF7, 0xD3, 0x7E, 0xD7, 0x37, XBMPROG_RLE_SKIP, 4, 0xFD, 0xF9, 0x7B, 0x7F, 0xFF, 0xFF, 0x5F, 0xF7, 0xD3, 0x7E, 0xD7, 0x30, XBMPROG_RLE_SKIP, 4, 0xFD, 0xFC, 0x7B, 0xFF, 0xFE, 0xDF, 0x5F, 0xF7, 0xD7, 0x7E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0x1D, 0xFF, 0x7B, 0xFF, 0xFD, 0xAF, 0x5F, 0xF3, 0xD7, 0x7E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xFF, 0x7B, 0xFF, 0xF1, 0x73, 0x5F, 0x03, 0xD7, 0x7E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xFF, 0x7B, 0xFF, 0x0D, 0xEC, 0x5E, 0xFF, 0xD7, 0x7E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xFF, 0x7B, 0xFF, 0xFD, 0xDF, 0x5D, 0xFF, 0xD7, 0x7E, 0xD7, 0x3E, XBMPROG_RLE_SKIP, 4, 0xDD, 0xFF, 0x7B, 0xFF, 0xFD, 0xBF, 0x4F, 0x03, 0xD6, 0x7E, 0xD7, 0x37, XBMPROG_RLE_SKIP, 4, 0xDD, 0x7F, 0x7B, 0xFF, 0xFD, 0x7F, 0x4E, 0xF9, 0x55, 0x7E, 0xD7, 0x37, XBMPROG_RLE_SKIP, 4, 0xDD, 0x7F, 0x7B, 0xFF, 0xFD, 0xFF, 0x41, 0xF9, 0x55, 0x7E, 0xD7, 0x37, XBMPROG_RLE_SKIP, 4, 0xC1, 0x7F, 0x08, 0x3E, 0xFC, 0xFF, 0x7F, 0xF8, 0x13, 0x7E, 0x10, 0x30, XBMPROG_RLE_SKIP, 4, XBMPROG_RLE_REPEAT, 0xFF, 11, 0x3F, XBMPROG_RLE_SKIP, 4, XBMPROG_RLE_REPEAT, 0xFF, 11, 0x3F, 0x00, 0x00, 
};
